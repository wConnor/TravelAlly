// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TravelAlly.Data;

#nullable disable

namespace TravelAlly.Migrations
{
    [DbContext(typeof(TravelAllyContext))]
    partial class TravelAllyContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("TravelAlly.Models.City", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Lat")
                        .HasColumnType("float");

                    b.Property<double>("Lon")
                        .HasColumnType("float");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("City");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Country = "England",
                            Lat = 51.507221999999999,
                            Lon = -0.1275,
                            Name = "London"
                        },
                        new
                        {
                            Id = 2,
                            Country = "France",
                            Lat = 48.864716000000001,
                            Lon = 2.3490139999999999,
                            Name = "Paris"
                        });
                });

            modelBuilder.Entity("TravelAlly.Models.Station", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("AcceptsTypes")
                        .HasColumnType("int");

                    b.Property<int>("CityId")
                        .HasColumnType("int");

                    b.Property<double>("Lat")
                        .HasColumnType("float");

                    b.Property<double>("Lon")
                        .HasColumnType("float");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TransportId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CityId");

                    b.HasIndex("TransportId");

                    b.ToTable("Station");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AcceptsTypes = 1,
                            CityId = 1,
                            Lat = 51.530000000000001,
                            Lon = -0.125278,
                            Name = "St. Pancras International"
                        },
                        new
                        {
                            Id = 2,
                            AcceptsTypes = 1,
                            CityId = 2,
                            Lat = 48.881110999999997,
                            Lon = 2.3552780000000002,
                            Name = "Gare du Nord"
                        });
                });

            modelBuilder.Entity("TravelAlly.Models.Transport", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("ArrivalTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Carrier")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DepartureTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Transport");
                });

            modelBuilder.Entity("TravelAlly.Models.Station", b =>
                {
                    b.HasOne("TravelAlly.Models.City", "City")
                        .WithMany()
                        .HasForeignKey("CityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TravelAlly.Models.Transport", null)
                        .WithMany("StationsServed")
                        .HasForeignKey("TransportId");

                    b.Navigation("City");
                });

            modelBuilder.Entity("TravelAlly.Models.Transport", b =>
                {
                    b.Navigation("StationsServed");
                });
#pragma warning restore 612, 618
        }
    }
}
