@model TravelAlly.ViewModels.CountryPageViewModel

@{
    ViewData["Title"] = "United Kingdom";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<head>
    <link rel="stylesheet" href="https://unpkg.com/leaflet@1.9.3/dist/leaflet.css" integrity="sha256-kLaT2GOSpHechhsozzB+flnD+zUyjE2LlfWPgU04xyI=" crossorigin="" />
    <script src="https://unpkg.com/leaflet@1.9.3/dist/leaflet.js" integrity="sha256-WBkoXOwTeyKclOHuWtc+i2uENFpDZ9YPdf5Hf+D7ewM=" crossorigin=""></script>
</head>
<body>
    <h2>United Kingdom</h2>
    @if (User.Identity.IsAuthenticated)
    {
        <a asp-action="EditSection" asp-controller="Home" asp-route-page="UnitedKingdom" asp-route-section="Country">Edit</a>
        <span> |</span>
    }
    <a asp-action="History" asp-controller="Home" asp-route-page="UnitedKingdom" asp-route-section="Country">View History</a>

    <div id="country">
        @Html.Raw(Model.SectionContentsDict["Country"])
    </div>

    <h3>Train</h3>
    @if (User.Identity.IsAuthenticated)
    {
        <a asp-action="EditSection" asp-controller="Home" asp-route-page="UnitedKingdom" asp-route-section="Train">Edit</a>
        <span> |</span>
    }
    <a asp-action="History" asp-controller="Home" asp-route-page="UnitedKingdom" asp-route-section="Train">View History</a>

    <div id="train">
        @Html.Raw(Model.SectionContentsDict["Train"])
    </div>

    <h3>Coach</h3>
    @if (User.Identity.IsAuthenticated)
    {
        <a asp-action="EditSection" asp-controller="Home" asp-route-page="UnitedKingdom" asp-route-section="Coach">Edit</a>
        <span> |</span>
    }
    <a asp-action="History" asp-controller="Home" asp-route-page="UnitedKingdom" asp-route-section="Coach">View History</a>

    <div id="coach">
        @Html.Raw(Model.SectionContentsDict["Coach"])
    </div>

    <h3>Map</h3>
    <div id="map">
        <script type="text/javascript">
            var map = L.map("map").setView([54.910, -3.432], 6);
            L.tileLayer('https://tile.openstreetmap.org/{z}/{x}/{y}.png', {
                maxZoom: 19,
                attribution: '&copy; <a href="http://www.openstreetmap.org/copyright">OpenStreetMap</a>'
            }).addTo(map);

            @foreach (var item in Model.Stations)
            {
                <text>
                                                var marker = L.marker([@item.Lat, @item.Lon]).addTo(map);
                marker.bindPopup("<b>@item.Name</b> (@item.Code)\
                                                <br><b>Accepts Transport</b>: @item.AcceptsTypes\
                                                <br><b>Coordinates</b>: @item.Lat, @item.Lon\
                                                <br>@item.City.Country,	@item.City.Continent");
                </text>
            }

            var points = [];

            @foreach (var item in Model.TransportRoutes)
            {
                <text>
                var points;
                </text>

                @foreach (var sp in item.StationPassings)
                {
                    <text>
                    points.push([@sp.Station.Lat, @sp.Station.Lon]);
                    </text>
                }

                @if (item.RouteType == RouteType.DOMESTIC)
                {
                    <text>
                    var polyLine = L.polyline(points, { color: "blue" });
                    </text>
                }
                else
                {
                    <text>
                    var polyLine = L.polyline(points, { color: "red" });
                    </text>
                }

                <text>
                    polyLine.bindPopup("<b>@item.Carrier</b><br>\
                                                <b>Route Code</b>: @item.RouteCode<br>\
                                                <b>Transport Type</b>: @item.Type<br>\
                                                <b>Route Type</b>: @item.RouteType<br>\
                                                <b>Operates	on Days</b>: @item.OperatesOnDays<br>\
                                                <b>Origin</b>: @item.StationPassings[0].Station.Name (@item.StationPassings[0].DepartureTime.Value.ToString("HH:mm"))<br>\
                                                <b>Destination</b>:	@item.StationPassings[item.StationPassings.Count-1].Station.Name\
                                                (@item.StationPassings[item.StationPassings.Count-1].ArrivalTime.Value.ToString("HH:mm"))");

                polyLine.addTo(map);
                points.length = 0;
                </text>
            }
        </script>
    </div>


</body>